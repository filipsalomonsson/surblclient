name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
env:
  POETRY_VERSION: 1.2.2
defaults:
  run:
    shell: bash
jobs:
  lint-and-test:
    name: 🎨🚦 Lint & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
    - name: ✨ Check out repository
      uses: actions/checkout@v3

    - name: Get pipx variables
      id: pipx-vars
      shell: bash
      run: |
        echo pipx-home=$PIPX_HOME >> $GITHUB_OUTPUT
        echo pipx-bin-dir=$PIPX_BIN_DIR >> $GITHUB_OUTPUT

    - if: ${{ runner.os == 'Windows' }}
      name: Use GNU tar
      shell: cmd
      run: |
        echo "Adding GNU tar to PATH"
        echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

    - name: ⚙️ Cache Poetry ${{ env.POETRY_VERSION }}
      id: cache-poetry
      uses: actions/cache@v3
      with:
        path: |
          ${{ steps.pipx-vars.outputs.pipx-home }}
          ${{ steps.pipx-vars.outputs.pipx-bin-dir }}
        key: poetry-${{ runner.os }}-poetry-${{ env.POETRY_VERSION }}-0

    - name: ⚙️ Install Poetry ${{ env.POETRY_VERSION }}
      run: |
        pipx install poetry==${POETRY_VERSION}
        poetry --version

    - name: ⚙️ Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: poetry

    - name: 📦 Install dependencies
      run: poetry install --no-interaction --no-root

    - name: 🎨 isort
      run: poetry run isort --check-only --verbose **/*.py

    - name: 🎨 black
      run: poetry run black --check .

    - name: 🎨 pylint
      run: poetry run pylint surblclient tests
        # stop the build if there are Python syntax errors or undefined names
        # poetry run flake8 . --extend-exclude .venv --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # poetry run flake8 . --extend-exclude .venv --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: 🚦 Test with pytest
      run: poetry run pytest --cov=surblclient
